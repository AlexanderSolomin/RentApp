@page "/fetchdata"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject IService<City> CityService


<h1>Города</h1>
@* 
    <SfGrid TValue="City" AllowPaging="true" AllowSorting="true" >
        <SfDataManager Adaptor="Adaptors.CustomAdaptor" AdaptorInstance="@typeof(AppDataAdaptor<City>)"></SfDataManager>
        <GridPageSettings PageSize="5" PageSizes="@pagerDropdown" PageCount="3"></GridPageSettings> 
        <GridSortSettings AllowUnsort="false">
            <GridSortColumns>
                <GridSortColumn Field="Title"></GridSortColumn>
            </GridSortColumns>
        </GridSortSettings>

            <SfToolbar>
                <ToolbarItems>
                    <ToolbarItem Type="ItemType.Input" Align="ItemAlign.Right">
                        <Template>
                            <SfTextBox @ref="searchTextBox" Placeholder="Search"></SfTextBox>
                        </Template>
                    </ToolbarItem>
                    <ToolbarItem Type="ItemType.Button" Align="ItemAlign.Right">
                        <Template>
                            <SfButton Content="Search" OnClick="@SearchClick"></SfButton>
                        </Template>
                    </ToolbarItem>
                </ToolbarItems>
            </SfToolbar>

            <GridColumns>
                <GridColumn Field=@nameof(City.Title) HeaderText="Наименование"></GridColumn>
                <GridColumn Field=@nameof(City.Subject) HeaderText="Субъект"></GridColumn>
                <GridColumn Field=@nameof(City.District) HeaderText="Регион"></GridColumn>
                <GridColumn Field=@nameof(City.Population) HeaderText="Население"></GridColumn>
            </GridColumns>
    </SfGrid>

@code{
    public string[] pagerDropdown { get; set; } = new string[] {"All", "5", "10", "20" };
    public AppDataResult<City> cities { get; set; }
    public SfGrid<City> cityGrid { get; set; }
    public SfTextBox searchTextBox { get; set;}
    @* protected override async Task OnInitializedAsync()
    {
        cityGrid = await CityService.;
    } 
    private async void OnInput(InputEventArgs args)
    {
        await this.cities.SearchAsync(args.Value);
    } 

        private async void SearchClick()
    {
        await this.cityGrid.SearchAsync(searchTextBox.Value);
    }
} *@