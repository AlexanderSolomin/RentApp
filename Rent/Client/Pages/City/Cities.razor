@page "/cities"
@attribute [Authorize]
@inject ICitiesService CityService

<div class="row">
    <div class="col-md-4">
        <Search OnSearchChanged="SearchChanged" />
    </div>
    <div class="col-md-4">
        <Sort OnSortChanged="SortChanged" />
    </div>
    <div class="col-md-2">
        <a href="cities/createCity">
            <button type="button" class="btn btn-warning">Создать</button>
        </a>
    </div>
</div>
<div class="row">
    <div class="col">
        <CityTable Cities="CitiesList" />
    </div>
</div>
<div class="row">
    <div class="col">
        <Pagination MetaData="MetaData" Spread="1" SelectedPage="SelectedPage" />
    </div>
</div>


@code {
    public List<City> CitiesList { get; set; } = new List<City>();
    public MetaData MetaData { get; set; } = new MetaData();
    private PagingParameters _pagingParameters = new PagingParameters();

    protected async override Task OnInitializedAsync()
    {
        await GetCities();
    }

    private async Task SearchChanged(string searchTerm)
    {
        Console.WriteLine(searchTerm);
        _pagingParameters.PageNumber = 1;
        _pagingParameters.SearchTerm = searchTerm;
        await GetCities();
    }

    private async Task SortChanged(string orderBy)
    {
        Console.WriteLine(orderBy);
        _pagingParameters.OrderBy = orderBy;
        await GetCities();
    }

    private async Task SelectedPage(int page)
    {
        _pagingParameters.PageNumber = page;
        await GetCities();
    }

    private async Task GetCities()
    {
        var pagingResponse = await CityService.GetCitiesPaged(_pagingParameters);
        CitiesList = pagingResponse.Items;
        MetaData = pagingResponse.MetaData;
    }
}