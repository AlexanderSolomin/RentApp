@page "/"
@attribute [AllowAnonymous]
@inject IRealtiesService _realties

    @if (IsLoading)
    {
        <span>Loading...</span>
    }

    <div class="row">
        <div class="col-md-4">
            <Search OnSearchChanged="SearchChanged" />
        </div>
        <div class="col-md-4">
            <Sort OnSortChanged="SortChanged" />
        </div>

    </div>

    <div class="row">
        @foreach (var realty in RealtiesList)
        {
            <div class="col-4">
                <RealtiesSummary RealtySum="@realty" />
            </div>

        }

    </div>

    <div class="row">
        <div class="col">
            <Pagination MetaData="MetaData" Spread="1" SelectedPage="SelectedPage" />
        </div>
    </div>


    @code {
        public List<Realty> RealtiesList { get; set; } = new List<Realty>();
        public MetaData MetaData { get; set; } = new MetaData();
        private PagingParameters _pagingParameters = new PagingParameters();
        private bool IsLoading { get; set; }
        public bool HasLoaded { get; set; }

        protected async override Task OnInitializedAsync()
        {
            await GetRealties();
        }

        private async Task SearchChanged(string searchTerm)
        {
            Console.WriteLine(searchTerm);
            _pagingParameters.PageNumber = 1;
            _pagingParameters.SearchTerm = searchTerm;
            await GetRealties();
        }

        private async Task SortChanged(string orderBy)
        {
            _pagingParameters.OrderBy = orderBy;
            await GetRealties();
        }

        private async Task SelectedPage(int page)
        {
            _pagingParameters.PageNumber = page;
            await GetRealties();
        }

        private async Task GetRealties()
        {
            if (HasLoaded)
            {
                return;
            }
            IsLoading = true;
            var pagingResponse = await _realties.GetRealtiesPaged(_pagingParameters);
            RealtiesList = pagingResponse.Items;
            MetaData = pagingResponse.MetaData;
            IsLoading = false;
            HasLoaded = true;
        }


    }
